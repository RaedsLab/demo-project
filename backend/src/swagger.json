{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Todo": {
				"properties": {
					"id": {
						"type": "string"
					},
					"date_created": {
						"type": "string",
						"format": "date-time"
					},
					"date_updated": {
						"type": "string",
						"format": "date-time"
					},
					"text": {
						"type": "string"
					},
					"done": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"date_created",
					"date_updated",
					"text",
					"done"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITodo": {
				"properties": {
					"text": {
						"type": "string"
					},
					"done": {
						"type": "boolean"
					},
					"id": {
						"type": "string"
					},
					"date_created": {
						"type": "string",
						"format": "date-time"
					},
					"date_updated": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"text",
					"done",
					"id",
					"date_created",
					"date_updated"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Todo.Exclude_keyofTodo.id-or-done-or-date_created-or-date_updated__": {
				"properties": {
					"text": {
						"type": "string"
					}
				},
				"required": [
					"text"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Todo.id-or-done-or-date_created-or-date_updated_": {
				"$ref": "#/components/schemas/Pick_Todo.Exclude_keyofTodo.id-or-done-or-date_created-or-date_updated__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"TodoCreationParams": {
				"$ref": "#/components/schemas/Omit_Todo.id-or-done-or-date_created-or-date_updated_"
			},
			"IUpdateTodoRequest": {
				"properties": {
					"done": {
						"type": "boolean"
					}
				},
				"required": [
					"done"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "demo-project-backend",
		"version": "0.0.1",
		"description": "Backend of demo-project",
		"license": {
			"name": "UNLICENSED"
		},
		"contact": {
			"name": "Raed Chammam",
			"email": "raed.chammam@gmail.com",
			"url": "https://raed.dev"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/todos/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Todo"
								}
							}
						}
					}
				},
				"tags": [
					"Todo"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "UpdateStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ITodo"
								}
							}
						}
					}
				},
				"tags": [
					"Todo"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUpdateTodoRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Todo"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/todos": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Todo"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Todo"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ITodo"
								}
							}
						}
					}
				},
				"tags": [
					"Todo"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TodoCreationParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}